
--=======================================================
--  Entity decleration
--=======================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity dekodstor is
port(
s1 : in std_logic_vector(7 downto 0);
s3 : in std_logic_vector(7 downto 0);
CLK : in std_logic;
f0  : out std_logic;
f1  : out std_logic;
f2  : out std_logic;
e1  : out std_logic_vector(7 downto 0);
e21  : out std_logic_vector(8 downto 0);
e22  : out std_logic_vector(8 downto 0));

end entity dekodstor;


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity log is
port  ( num : in std_logic_vector(7 downto 0);
data_out : out std_logic_vector(7 downto 0));
end entity;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity antilog is
port  ( num : in std_logic_vector(7 downto 0);
data_out : out std_logic_vector(7 downto 0));
end entity;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity rod1 is
port  ( num : in std_logic_vector(8 downto 0);
data_out : out std_logic_vector(7 downto 0));
end entity;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity rod2 is
port  ( num : in std_logic_vector(8 downto 0);
data_out : out std_logic_vector(7 downto 0));
end entity;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity tjekrod is
port  ( num : in std_logic_vector(8 downto 0);
data_out : out std_logic);
end entity;


    --DE10_LITE_Empty_Top:
    --
-------------- CLOCK ----------
--input           ADC_CLK_10,
--input           MAX10_CLK1_50,
--input           MAX10_CLK2_50,
    --
-------------- SDRAM ----------
--output    [12:0] DRAM_ADDR,
--output     [1:0] DRAM_BA,
--output           DRAM_CAS_N,
--output           DRAM_CKE,
--output           DRAM_CLK,
--output           DRAM_CS_N,
--inout    [15:0] DRAM_DQ,
--output           DRAM_LDQM,
--output           DRAM_RAS_N,
--output           DRAM_UDQM,
--output           DRAM_WE_N,
    --
-------------- SEG7 ----------
--output     [7:0] HEX0,
--output     [7:0] HEX1,
--output     [7:0] HEX2,
--output     [7:0] HEX3,
--output     [7:0] HEX4,
--output     [7:0] HEX5,
    --
-------------- KEY ----------
--input     [1:0] KEY,
    --
-------------- LED ----------
--output     [9:0] LEDR,
    --
-------------- SW ----------
--input     [9:0] SW,
    --
-------------- VGA ----------
--output     [3:0] VGA_B,
--output     [3:0] VGA_G,
--output           VGA_HS,
--output     [3:0] VGA_R,
--output           VGA_VS,
    --
-------------- Accelerometer ----------
--output           GSENSOR_CS_N,
--input     [2:1] GSENSOR_INT,
--output           GSENSOR_SCLK,
--inout           GSENSOR_SDI,
--inout           GSENSOR_SDO,
    --
-------------- Arduino ----------
--inout    [15:0] ARDUINO_IO,
--inout           ARDUINO_RESET_N,
    --
-------------- GPIO, GPIO connect to GPIO Default ----------
--inout    [35:0] GPIO




--=======================================================
-- Architecture declaration
--=======================================================
architecture dekodstor_arch of dekodstor is

signal s1_log: std_logic_vector(7 downto 0);
signal s3_delay: std_logic_vector(7 downto 0);


signal logt_out: std_logic_vector(7 downto 0);
signal antilogt_out: std_logic_vector(7 downto 0);
signal logt_out2: std_logic_vector(7 downto 0);
signal logt_out3: std_logic_vector(7 downto 0);

signal s1s1s1_log: std_logic_vector(9 downto 0);
signal s3_delay2: std_logic_vector(7 downto 0);
signal s3_delay3: std_logic_vector(7 downto 0);
signal s3_delay4: std_logic_vector(7 downto 0);
signal s3_delay5: std_logic_vector(7 downto 0);
signal s3_delay6: std_logic_vector(7 downto 0);
signal s3_delay7: std_logic_vector(7 downto 0);
signal s3_delay8: std_logic_vector(7 downto 0);



signal f0_delay: std_logic;
signal f0_delay1: std_logic;
signal f0_delay2: std_logic;
signal f0_delay3: std_logic;
signal f0_delay4: std_logic;
signal f0_delay5: std_logic;
signal f0_delay6: std_logic;
signal f0_delay7: std_logic;
signal f0_delay8: std_logic;
 
signal f0d_delay : std_logic;

signal f1_delay: std_logic;
signal f1_delay1: std_logic;
signal f1_delay2: std_logic;

signal s1_power3: std_logic_vector(9 downto 0);
signal s1_power3_f: std_logic_vector(9 downto 0);
signal s1_power3_f_delay: std_logic_vector(7 downto 0);
signal s1_power3_f_delay1: std_logic_vector(7 downto 0);
signal s1_power3_f_delay2: std_logic_vector(7 downto 0);
signal s1_power3_f_delay3: std_logic_vector(7 downto 0);
signal s1_power3_f_log: std_logic_vector(7 downto 0);


signal s1_log_delay : std_logic_vector(7 downto 0);
signal s1_log_delay1 : std_logic_vector(7 downto 0);
signal s1_log_delay2 : std_logic_vector(7 downto 0);
signal s1_log_delay3 : std_logic_vector(7 downto 0);
signal s1_log_delay4 : std_logic_vector(7 downto 0);
signal s1_log_delay5 : std_logic_vector(7 downto 0);
signal s1_log_delay6 : std_logic_vector(7 downto 0);
signal s1_log_delay7 : std_logic_vector(7 downto 0);

signal s1_3_antilog : std_logic_vector(7 downto 0);
signal s1_3_anitlog_delay : std_logic_vector(7 downto 0);

signal xos13s3 : std_logic_vector(7 downto 0);

signal sigma2 : std_logic_vector(7 downto 0);

signal A : std_logic_vector(8 downto 0);

signal rod1_intern : std_logic_vector(7 downto 0);

signal rod2_intern : std_logic_vector(7 downto 0);

signal rod_tjek_intern : std_logic;

signal rod1_intern_delay : std_logic_vector(7 downto 0);

signal rod2_intern_delay : std_logic_vector(7 downto 0);

signal rod_tjek_intern_delay : std_logic;

signal f2_delay : std_logic;

signal e1d_delay : std_logic_vector(7 downto 0);

signal f1d_delay : std_logic;

signal e21d_delay : std_logic_vector(8 downto 0);

signal e22d_delay : std_logic_vector(8 downto 0);

signal f2d_delay : std_logic;






component log
port  ( num : in std_logic_vector(7 downto 0);
data_out : out std_logic_vector(7 downto 0));
end component;

component antilog
port  ( num : in std_logic_vector(7 downto 0);
data_out : out std_logic_vector(7 downto 0));
end component;

component rod1 is
port  ( num : in std_logic_vector(8 downto 0);
data_out : out std_logic_vector(7 downto 0));
end component;

component rod2 is
port  ( num : in std_logic_vector(8 downto 0);
data_out : out std_logic_vector(7 downto 0));
end component;


component tjekrod is
port  ( num : in std_logic_vector(8 downto 0);
data_out : out std_logic);
end component;

begin

log1 : log port map(num => s1, data_out => logt_out);
logt2 : log port map(num => s3, data_out => logt_out2);
logt3 : log port map(num => xos13s3, data_out => logt_out3);
antilog1 : antilog port map(num => s1_power3_f(7 downto 0), data_out => antilogt_out);
rod11 : rod1 port map(num => A, data_out => rod1_intern);
rod22 : rod2 port map(num => A, data_out => rod2_intern);
rodtjek1 : tjekrod port map(num => A, data_out => rod_tjek_intern);



process (CLK)
begin

if (rising_edge(CLK)) then

s1_log <=logt_out;

s3_delay <= s3;

if(s1="00000000" and s3="00000000") then

f0_delay<='1';

else

f0_delay <= '0';

end if;

end if;
end process;


process(CLK)
begin

if(rising_edge(CLK)) then

s1s1s1_log <= ("00"&s1_log)+("00"&s1_log)+("00"&s1_log);

s3_delay2 <= s3_delay;

f0_delay1 <= f0_delay;

s1_log_delay <= s1_log;

end if;
end process;


process(CLK)
begin

if(rising_edge(CLK)) then



f0_delay2 <= f0_delay1;

s3_delay3 <= s3_delay2;

s1_log_delay1 <= s1_log_delay;

if (s1s1s1_log > 254) then

s1_power3 <= s1s1s1_log-255;

else

s1_power3 <= s1s1s1_log;

end if;


end if;
end process;

process(CLK)
begin

if(rising_edge(CLK)) then


f0_delay3 <= f0_delay2;

s3_delay4 <= s3_delay3;

s1_log_delay2 <= s1_log_delay1;

if (s1_power3 > 254) then

s1_power3_f <= s1_power3-255;

else

s1_power3_f <= s1_power3;

end if;


end if;
end process;

process(CLK)
begin

if(rising_edge(CLK)) then

s1_power3_f_delay <= s1_power3_f(7 downto 0);

s3_delay5 <= s3_delay4;

s1_3_antilog <=antilogt_out;

f0_delay4 <= f0_delay3;

s1_log_delay3 <= s1_log_delay2;



end if;
end process;


process(CLK)
begin

if(rising_edge(CLK)) then


s1_power3_f_delay1 <= s1_power3_f_delay;

s3_delay6 <= s3_delay5;

 s1_3_anitlog_delay <= s1_3_antilog;

f0_delay5 <= f0_delay4;

s1_log_delay4 <= s1_log_delay3;

xos13s3 <= s3_delay5 xor s1_3_antilog;



end if;
end process;

process(CLK)
begin

if(rising_edge(CLK)) then


s1_power3_f_delay2 <= s1_power3_f_delay1;

s3_delay7 <= s3_delay6;


f0_delay6 <= f0_delay5;

s1_log_delay5 <= s1_log_delay4;

sigma2 <= logt_out3;

if(s1_3_anitlog_delay = s3_delay6) then


if ((xos13s3="00000000")or(not s3_delay6= "00000000")) then

f1_delay <= '1';
else
f1_delay <= '0';

end if;

else
f1_delay <= '0';
end if;




end if;
end process;

process(CLK)
begin

if(rising_edge(CLK)) then


s1_power3_f_delay3 <= s1_power3_f_delay2;

s3_delay8 <= s3_delay7;


f0_delay7 <= f0_delay6;

s1_log_delay6 <= s1_log_delay5;

f1_delay1 <= f1_delay;

A <= ('0'&sigma2) - ('0'&s1_power3_f_delay2) + "011111111";




end if;
end process;

process(CLK)
begin

if(rising_edge(CLK)) then




f0_delay8 <= f0_delay7;

s1_log_delay7 <= s1_log_delay6;

f1_delay2 <= f1_delay1;

rod1_intern_delay <= rod1_intern;

rod2_intern_delay <= rod2_intern;

rod_tjek_intern_delay <= rod_tjek_intern;





end if;
end process;


process(CLK)
begin

if(rising_edge(CLK)) then




f0d_delay <= f0_delay8;

e1d_delay <= 255-s1_log_delay7;

f1d_delay <= f1_delay2;

e21d_delay <= ('0'&rod1_intern_delay)+('0'&s1_log_delay7);

e22d_delay <= ('0'&rod2_intern_delay)+('0'&s1_log_delay7);


if(f1_delay2 = '1') then

f2d_delay <= '0';

else

f2d_delay <= rod_tjek_intern_delay;

end if;





end if;
end process;

process(CLK)
begin

if(rising_edge(CLK)) then



f0 <= f0d_delay;

e1 <= e1d_delay;

f1 <= f1d_delay ;

if(e21d_delay>"011111110") then
e21<=e21d_delay-"011111111";
else
e21<=7-e21d_delay;
end if;

if(e22d_delay>"011111110") then
e22<=e22d_delay-"011111111";
else
e22<=255-e22d_delay;
end if;


f2 <= f2d_delay;




end if;
end process;



end architecture;




architecture log_arch of log is

type ROM_type is array (0 to 255) of std_logic_vector(7 downto 0);

constant ROM : ROM_type := (
    0 => b"11111111", 
     1

=>b"00000000",

 

     2

=>b"00000001",

 

     3

=>b"00011001",

 

     4

=>b"00000010",

 

     5

=>b"00110010",

 

     6

=>b"00011010",

 

     7

=>b"11000110",

 

     8

=>b"00000011",

 

     9

=>b"11011111",

 

    10

=>b"00110011",


 

    11

=>b"11101110",

 

    12

=>b"00011011",

 

    13

=>b"01101000",

 

    14

=>b"11000111",

 

    15

=>b"01001011",

 

    16

=>b"00000100",

 

    17

=>b"01100100",

 

    18

=>b"11100000",

 

    19

=>b"00001110",

 

    20

=>b"00110100",


 

    21

=>b"10001101",

 

    22

=>b"11101111",

 

    23

=>b"10000001",

 

    24

=>b"00011100",

 

    25

=>b"11000001",

 

    26

=>b"01101001",

 

    27

=>b"11111000",

 

    28

=>b"11001000",

 

    29

=>b"00001000",

 

    30

=>b"01001100",


 

    31

=>b"01110001",

 

    32

=>b"00000101",

 

    33

=>b"10001010",

 

    34

=>b"01100101",

 

    35

=>b"00101111",

 

    36

=>b"11100001",

 

    37

=>b"00100100",

 

    38

=>b"00001111",

 

    39

=>b"00100001",

 

    40

=>b"00110101",


 

    41

=>b"10010011",

 

    42

=>b"10001110",

 

    43

=>b"11011010",

 

    44

=>b"11110000",

 

    45

=>b"00010010",

 

    46

=>b"10000010",

 

    47

=>b"01000101",

 

    48

=>b"00011101",

 

    49

=>b"10110101",

 

    50

=>b"11000010",


 

    51

=>b"01111101",

 

    52

=>b"01101010",

 

    53

=>b"00100111",

 

    54

=>b"11111001",

 

    55

=>b"10111001",

 

    56

=>b"11001001",

 

    57

=>b"10011010",

 

    58

=>b"00001001",

 

    59

=>b"01111000",

 

    60

=>b"01001101",


 

    61

=>b"11100100",

 

    62

=>b"01110010",

 

    63

=>b"10100110",

 

    64

=>b"00000110",

 

    65

=>b"10111111",

 

    66

=>b"10001011",

 

    67

=>b"01100010",

 

    68

=>b"01100110",

 

    69

=>b"11011101",

 

    70

=>b"00110000",


 

    71

=>b"11111101",

 

    72

=>b"11100010",

 

    73

=>b"10011000",

 

    74

=>b"00100101",

 

    75

=>b"10110011",

 

    76

=>b"00010000",

 

    77

=>b"10010001",

 

    78

=>b"00100010",

 

    79

=>b"10001000",

 

    80

=>b"00110110",


 

    81

=>b"11010000",

 

    82

=>b"10010100",

 

    83

=>b"11001110",

 

    84

=>b"10001111",

 

    85

=>b"10010110",

 

    86

=>b"11011011",

 

    87

=>b"10111101",

 

    88

=>b"11110001",

 

    89

=>b"11010010",

 

    90

=>b"00010011",


 

    91

=>b"01011100",

 

    92

=>b"10000011",

 

    93

=>b"00111000",

 

    94

=>b"01000110",

 

    95

=>b"01000000",

 

    96

=>b"00011110",

 

    97

=>b"01000010",

 

    98

=>b"10110110",

 

    99

=>b"10100011",

 

   100

=>b"11000011",


 

   101

=>b"01001000",

 

   102

=>b"01111110",

 

   103

=>b"01101110",

 

   104

=>b"01101011",

 

   105

=>b"00111010",

 

   106

=>b"00101000",

 

   107

=>b"01010100",

 

   108

=>b"11111010",

 

   109

=>b"10000101",

 

   110

=>b"10111010",


 

   111

=>b"00111101",

 

   112

=>b"11001010",

 

   113

=>b"01011110",

 

   114

=>b"10011011",

 

   115

=>b"10011111",

 

   116

=>b"00001010",

 

   117

=>b"00010101",

 

   118

=>b"01111001",

 

   119

=>b"00101011",

 

   120

=>b"01001110",


 

   121

=>b"11010100",

 

   122

=>b"11100101",

 

   123

=>b"10101100",

 

   124

=>b"01110011",

 

   125

=>b"11110011",

 

   126

=>b"10100111",

 

   127

=>b"01010111",

 

   128

=>b"00000111",

 

   129

=>b"01110000",

 

   130

=>b"11000000",


 

   131

=>b"11110111",

 

   132

=>b"10001100",

 

   133

=>b"10000000",

 

   134

=>b"01100011",

 

   135

=>b"00001101",

 

   136

=>b"01100111",

 

   137

=>b"01001010",

 

   138

=>b"11011110",

 

   139

=>b"11101101",

 

   140

=>b"00110001",


 

   141

=>b"11000101",

 

   142

=>b"11111110",

 

   143

=>b"00011000",

 

   144

=>b"11100011",

 

   145

=>b"10100101",

 

   146

=>b"10011001",

 

   147

=>b"01110111",

 

   148

=>b"00100110",

 

   149

=>b"10111000",

 

   150

=>b"10110100",


 

   151

=>b"01111100",

 

   152

=>b"00010001",

 

   153

=>b"01000100",

 

   154

=>b"10010010",

 

   155

=>b"11011001",

 

   156

=>b"00100011",

 

   157

=>b"00100000",

 

   158

=>b"10001001",

 

   159

=>b"00101110",

 

   160

=>b"00110111",


 

   161

=>b"00111111",

 

   162

=>b"11010001",

 

   163

=>b"01011011",

 

   164

=>b"10010101",

 

   165

=>b"10111100",

 

   166

=>b"11001111",

 

   167

=>b"11001101",

 

   168

=>b"10010000",

 

   169

=>b"10000111",

 

   170

=>b"10010111",


 

   171

=>b"10110010",

 

   172

=>b"11011100",

 

   173

=>b"11111100",

 

   174

=>b"10111110",

 

   175

=>b"01100001",

 

   176

=>b"11110010",

 

   177

=>b"01010110",

 

   178

=>b"11010011",

 

   179

=>b"10101011",

 

   180

=>b"00010100",


 

   181

=>b"00101010",

 

   182

=>b"01011101",

 

   183

=>b"10011110",

 

   184

=>b"10000100",

 

   185

=>b"00111100",

 

   186

=>b"00111001",

 

   187

=>b"01010011",

 

   188

=>b"01000111",

 

   189

=>b"01101101",

 

   190

=>b"01000001",


 

   191

=>b"10100010",

 

   192

=>b"00011111",

 

   193

=>b"00101101",

 

   194

=>b"01000011",

 

   195

=>b"11011000",

 

   196

=>b"10110111",

 

   197

=>b"01111011",

 

   198

=>b"10100100",

 

   199

=>b"01110110",

 

   200

=>b"11000100",


 

   201

=>b"00010111",

 

   202

=>b"01001001",

 

   203

=>b"11101100",

 

   204

=>b"01111111",

 

   205

=>b"00001100",

 

   206

=>b"01101111",

 

   207

=>b"11110110",

 

   208

=>b"01101100",

 

   209

=>b"10100001",

 

   210

=>b"00111011",


 

   211

=>b"01010010",

 

   212

=>b"00101001",

 

   213

=>b"10011101",

 

   214

=>b"01010101",

 

   215

=>b"10101010",

 

   216

=>b"11111011",

 

   217

=>b"01100000",

 

   218

=>b"10000110",

 

   219

=>b"10110001",

 

   220

=>b"10111011",


 

   221

=>b"11001100",

 

   222

=>b"00111110",

 

   223

=>b"01011010",

 

   224

=>b"11001011",

 

   225

=>b"01011001",

 

   226

=>b"01011111",

 

   227

=>b"10110000",

 

   228

=>b"10011100",

 

   229

=>b"10101001",

 

   230

=>b"10100000",


 

   231

=>b"01010001",

 

   232

=>b"00001011",

 

   233

=>b"11110101",

 

   234

=>b"00010110",

 

   235

=>b"11101011",

 

   236

=>b"01111010",

 

   237

=>b"01110101",

 

   238

=>b"00101100",

 

   239

=>b"11010111",

 

   240

=>b"01001111",


 

   241

=>b"10101110",

 

   242

=>b"11010101",

 

   243

=>b"11101001",

 

   244

=>b"11100110",

 

   245

=>b"11100111",

 

   246

=>b"10101101",

 

   247

=>b"11101000",

 

   248

=>b"01110100",

 

   249

=>b"11010110",

 

   250

=>b"11110100",


 

   251

=>b"11101010",

 

   252

=>b"10101000",

 

   253

=>b"01010000",

 

   254

=>b"01011000",

 

   255

=>b"10101111"
); 
begin

data_out <= ROM(to_integer(unsigned(num)));

end architecture;


architecture antilog_arch of antilog is

type ROM_type is array (0 to 255) of std_logic_vector(7 downto 0);

constant ROM : ROM_type := (
     0

=>b"00000001",

 

     1

=>b"00000010",

 

     2

=>b"00000100",

 

     3

=>b"00001000",

 

     4

=>b"00010000",

 

     5

=>b"00100000",

 

     6

=>b"01000000",

 

     7

=>b"10000000",

 

     8

=>b"00011101",

 

     9

=>b"00111010",


 

    10

=>b"01110100",

 

    11

=>b"11101000",

 

    12

=>b"11001101",

 

    13

=>b"10000111",

 

    14

=>b"00010011",

 

    15

=>b"00100110",

 

    16

=>b"01001100",

 

    17

=>b"10011000",

 

    18

=>b"00101101",

 

    19

=>b"01011010",


 

    20

=>b"10110100",

 

    21

=>b"01110101",

 

    22

=>b"11101010",

 

    23

=>b"11001001",

 

    24

=>b"10001111",

 

    25

=>b"00000011",

 

    26

=>b"00000110",

 

    27

=>b"00001100",

 

    28

=>b"00011000",

 

    29

=>b"00110000",


 

    30

=>b"01100000",

 

    31

=>b"11000000",

 

    32

=>b"10011101",

 

    33

=>b"00100111",

 

    34

=>b"01001110",

 

    35

=>b"10011100",

 

    36

=>b"00100101",

 

    37

=>b"01001010",

 

    38

=>b"10010100",

 

    39

=>b"00110101",


 

    40

=>b"01101010",

 

    41

=>b"11010100",

 

    42

=>b"10110101",

 

    43

=>b"01110111",

 

    44

=>b"11101110",

 

    45

=>b"11000001",

 

    46

=>b"10011111",

 

    47

=>b"00100011",

 

    48

=>b"01000110",

 

    49

=>b"10001100",


 

    50

=>b"00000101",

 

    51

=>b"00001010",

 

    52

=>b"00010100",

 

    53

=>b"00101000",

 

    54

=>b"01010000",

 

    55

=>b"10100000",

 

    56

=>b"01011101",

 

    57

=>b"10111010",

 

    58

=>b"01101001",

 

    59

=>b"11010010",


 

    60

=>b"10111001",

 

    61

=>b"01101111",

 

    62

=>b"11011110",

 

    63

=>b"10100001",

 

    64

=>b"01011111",

 

    65

=>b"10111110",

 

    66

=>b"01100001",

 

    67

=>b"11000010",

 

    68

=>b"10011001",

 

    69

=>b"00101111",


 

    70

=>b"01011110",

 

    71

=>b"10111100",

 

    72

=>b"01100101",

 

    73

=>b"11001010",

 

    74

=>b"10001001",

 

    75

=>b"00001111",

 

    76

=>b"00011110",

 

    77

=>b"00111100",

 

    78

=>b"01111000",

 

    79

=>b"11110000",


 

    80

=>b"11111101",

 

    81

=>b"11100111",

 

    82

=>b"11010011",

 

    83

=>b"10111011",

 

    84

=>b"01101011",

 

    85

=>b"11010110",

 

    86

=>b"10110001",

 

    87

=>b"01111111",

 

    88

=>b"11111110",

 

    89

=>b"11100001",


 

    90

=>b"11011111",

 

    91

=>b"10100011",

 

    92

=>b"01011011",

 

    93

=>b"10110110",

 

    94

=>b"01110001",

 

    95

=>b"11100010",

 

    96

=>b"11011001",

 

    97

=>b"10101111",

 

    98

=>b"01000011",

 

    99

=>b"10000110",


 

   100

=>b"00010001",

 

   101

=>b"00100010",

 

   102

=>b"01000100",

 

   103

=>b"10001000",

 

   104

=>b"00001101",

 

   105

=>b"00011010",

 

   106

=>b"00110100",

 

   107

=>b"01101000",

 

   108

=>b"11010000",

 

   109

=>b"10111101",


 

   110

=>b"01100111",

 

   111

=>b"11001110",

 

   112

=>b"10000001",

 

   113

=>b"00011111",

 

   114

=>b"00111110",

 

   115

=>b"01111100",

 

   116

=>b"11111000",

 

   117

=>b"11101101",

 

   118

=>b"11000111",

 

   119

=>b"10010011",


 

   120

=>b"00111011",

 

   121

=>b"01110110",

 

   122

=>b"11101100",

 

   123

=>b"11000101",

 

   124

=>b"10010111",

 

   125

=>b"00110011",

 

   126

=>b"01100110",

 

   127

=>b"11001100",

 

   128

=>b"10000101",

 

   129

=>b"00010111",


 

   130

=>b"00101110",

 

   131

=>b"01011100",

 

   132

=>b"10111000",

 

   133

=>b"01101101",

 

   134

=>b"11011010",

 

   135

=>b"10101001",

 

   136

=>b"01001111",

 

   137

=>b"10011110",

 

   138

=>b"00100001",

 

   139

=>b"01000010",


 

   140

=>b"10000100",

 

   141

=>b"00010101",

 

   142

=>b"00101010",

 

   143

=>b"01010100",

 

   144

=>b"10101000",

 

   145

=>b"01001101",

 

   146

=>b"10011010",

 

   147

=>b"00101001",

 

   148

=>b"01010010",

 

   149

=>b"10100100",


 

   150

=>b"01010101",

 

   151

=>b"10101010",

 

   152

=>b"01001001",

 

   153

=>b"10010010",

 

   154

=>b"00111001",

 

   155

=>b"01110010",

 

   156

=>b"11100100",

 

   157

=>b"11010101",

 

   158

=>b"10110111",

 

   159

=>b"01110011",


 

   160

=>b"11100110",

 

   161

=>b"11010001",

 

   162

=>b"10111111",

 

   163

=>b"01100011",

 

   164

=>b"11000110",

 

   165

=>b"10010001",

 

   166

=>b"00111111",

 

   167

=>b"01111110",

 

   168

=>b"11111100",

 

   169

=>b"11100101",


 

   170

=>b"11010111",

 

   171

=>b"10110011",

 

   172

=>b"01111011",

 

   173

=>b"11110110",

 

   174

=>b"11110001",

 

   175

=>b"11111111",

 

   176

=>b"11100011",

 

   177

=>b"11011011",

 

   178

=>b"10101011",

 

   179

=>b"01001011",


 

   180

=>b"10010110",

 

   181

=>b"00110001",

 

   182

=>b"01100010",

 

   183

=>b"11000100",

 

   184

=>b"10010101",

 

   185

=>b"00110111",

 

   186

=>b"01101110",

 

   187

=>b"11011100",

 

   188

=>b"10100101",

 

   189

=>b"01010111",


 

   190

=>b"10101110",

 

   191

=>b"01000001",

 

   192

=>b"10000010",

 

   193

=>b"00011001",

 

   194

=>b"00110010",

 

   195

=>b"01100100",

 

   196

=>b"11001000",

 

   197

=>b"10001101",

 

   198

=>b"00000111",

 

   199

=>b"00001110",


 

   200

=>b"00011100",

 

   201

=>b"00111000",

 

   202

=>b"01110000",

 

   203

=>b"11100000",

 

   204

=>b"11011101",

 

   205

=>b"10100111",

 

   206

=>b"01010011",

 

   207

=>b"10100110",

 

   208

=>b"01010001",

 

   209

=>b"10100010",


 

   210

=>b"01011001",

 

   211

=>b"10110010",

 

   212

=>b"01111001",

 

   213

=>b"11110010",

 

   214

=>b"11111001",

 

   215

=>b"11101111",

 

   216

=>b"11000011",

 

   217

=>b"10011011",

 

   218

=>b"00101011",

 

   219

=>b"01010110",


 

   220

=>b"10101100",

 

   221

=>b"01000101",

 

   222

=>b"10001010",

 

   223

=>b"00001001",

 

   224

=>b"00010010",

 

   225

=>b"00100100",

 

   226

=>b"01001000",

 

   227

=>b"10010000",

 

   228

=>b"00111101",

 

   229

=>b"01111010",


 

   230

=>b"11110100",

 

   231

=>b"11110101",

 

   232

=>b"11110111",

 

   233

=>b"11110011",

 

   234

=>b"11111011",

 

   235

=>b"11101011",

 

   236

=>b"11001011",

 

   237

=>b"10001011",

 

   238

=>b"00001011",

 

   239

=>b"00010110",


 

   240

=>b"00101100",

 

   241

=>b"01011000",

 

   242

=>b"10110000",

 

   243

=>b"01111101",

 

   244

=>b"11111010",

 

   245

=>b"11101001",

 

   246

=>b"11001111",

 

   247

=>b"10000011",

 

   248

=>b"00011011",

 

   249

=>b"00110110",


 

   250

=>b"01101100",

 

   251

=>b"11011000",

 

   252

=>b"10101101",

 

   253

=>b"01000111",

 

   254

=>b"10001110");
begin

data_out <= ROM(to_integer(unsigned(num)));

end architecture;



architecture rod1_arch of rod1 is

type ROM_type is array (0 to 511) of std_logic_vector(7 downto 0);

constant ROM : ROM_type := (
    0 => b"01010101", 1 => b"00001011", 2 => b"00010110", 3 => b"00010010",
    4 => b"00101100", 5 => b"00000000", 6 => b"00100100", 7 => b"00110110",
    8 => b"01011000", 9 => b"00000000", 10 => b"00000000", 11 => b"00000000",
    12 => b"01001000", 13 => b"10000000", 14 => b"01101100", 15 => b"00000000",
    16 => b"01011111", 17 => b"01110111", 18 => b"00000000", 19 => b"01001011",
    20 => b"00000000", 21 => b"00000000", 22 => b"00000000", 23 => b"00011000",
    24 => b"10000111", 25 => b"01110010", 26 => b"00000001", 27 => b"01110110",
    28 => b"01000011", 29 => b"00000000", 30 => b"00000000", 31 => b"00001010",
    32 => b"01100001", 33 => b"00000000", 34 => b"00110011", 35 => b"01001110",
    36 => b"00000000", 37 => b"01011001", 38 => b"10001111", 39 => b"00000000",
    40 => b"00000000", 41 => b"01011110", 42 => b"00000000", 43 => b"00000000",
    44 => b"00000000", 45 => b"01011011", 46 => b"00110000", 47 => b"00000000",
    48 => b"00001111", 49 => b"01111100", 50 => b"01001101", 51 => b"01111011",
    52 => b"00000010", 53 => b"00000000", 54 => b"01001001", 55 => b"00000000",
    56 => b"10000110", 57 => b"00000000", 58 => b"00000000", 59 => b"10011011",
    60 => b"00000000", 61 => b"00000000", 62 => b"00010100", 63 => b"00000000",
    64 => b"01111101", 65 => b"00000000", 66 => b"00000000", 67 => b"00100000",
    68 => b"01100110", 69 => b"00000000", 70 => b"10011100", 71 => b"00000000",
    72 => b"00000000", 73 => b"01010110", 74 => b"10010111", 75 => b"01110100",
    76 => b"00011111", 77 => b"00000000", 78 => b"00000000", 79 => b"00000000",
    80 => b"00000000", 81 => b"10010101", 82 => b"00000000", 83 => b"00000000",
    84 => b"00010001", 85 => b"00000000", 86 => b"00000000", 87 => b"00000000",
    88 => b"00000000", 89 => b"10100011", 90 => b"00000000", 91 => b"01100000",
    92 => b"00000000", 93 => b"00000000", 94 => b"00011110", 95 => b"00000000",
    96 => b"01101001", 97 => b"10010100", 98 => b"10011010", 99 => b"00000000",
    100 => b"01101111", 101 => b"01110011", 102 => b"00000100", 103 => b"10001110",
    104 => b"00000000", 105 => b"00000000", 106 => b"10010010", 107 => b"00000000",
    108 => b"00000000", 109 => b"00010011", 110 => b"00001101", 111 => b"10000001",
    112 => b"00000000", 113 => b"00000000", 114 => b"00000000", 115 => b"00000000",
    116 => b"00110111", 117 => b"00000111", 118 => b"00000000", 119 => b"00000000",
    120 => b"00000000", 121 => b"10011000", 122 => b"00101000", 123 => b"00000000",
    124 => b"00000000", 125 => b"10101011", 126 => b"10000101", 127 => b"00001001",
    128 => b"00000000", 129 => b"00011011", 130 => b"00000000", 131 => b"00000000",
    132 => b"01000000", 133 => b"00000000", 134 => b"10111011", 135 => b"10100101",
    136 => b"00000000", 137 => b"00001100", 138 => b"00111001", 139 => b"00111011",
    140 => b"00000000", 141 => b"00000101", 142 => b"00000000", 143 => b"00100111",
    144 => b"10101100", 145 => b"00000000", 146 => b"00101111", 147 => b"00000000",
    148 => b"10101101", 149 => b"00000000", 150 => b"00111110", 151 => b"10111101",
    152 => b"00000000", 153 => b"00000000", 154 => b"11001101", 155 => b"00000000",
    156 => b"00000000", 157 => b"00000000", 158 => b"00010000", 159 => b"00000000",
    160 => b"00000000", 161 => b"00101011", 162 => b"00111010", 163 => b"00000000",
    164 => b"00000000", 165 => b"00000000", 166 => b"00100010", 167 => b"00000000",
    168 => b"00000000", 169 => b"00000000", 170 => b"00000000", 171 => b"00000000",
    172 => b"01001010", 173 => b"00000000", 174 => b"10111001", 175 => b"01000111",
    176 => b"00000000", 177 => b"00000000", 178 => b"00101110", 179 => b"11000000",
    180 => b"00000000", 181 => b"00000000", 182 => b"00111000", 183 => b"00000000",
    184 => b"01001100", 185 => b"00000000", 186 => b"11010101", 187 => b"00111100",
    188 => b"00110100", 189 => b"00000000", 190 => b"11010010", 191 => b"00000110",
    192 => b"00101001", 193 => b"01000101", 194 => b"00110101", 195 => b"00000000",
    196 => b"00000000", 197 => b"11011110", 198 => b"00000000", 199 => b"11100110",
    200 => b"00001000", 201 => b"00000000", 202 => b"00011101", 203 => b"00000000",
    204 => b"00000000", 205 => b"00000000", 206 => b"00000000", 207 => b"00100101",
    208 => b"11011100", 209 => b"00000000", 210 => b"00010111", 211 => b"00000000",
    212 => b"00011100", 213 => b"00100110", 214 => b"11101010", 215 => b"00011010",
    216 => b"00000011", 217 => b"01000001", 218 => b"00000000", 219 => b"00000000",
    220 => b"00000000", 221 => b"00000000", 222 => b"00000000", 223 => b"00000000",
    224 => b"00000000", 225 => b"01101110", 226 => b"01100010", 227 => b"00001110",
    228 => b"01110101", 229 => b"00000000", 230 => b"01010001", 231 => b"00000000",
    232 => b"00000000", 233 => b"00000000", 234 => b"00110001", 235 => b"00111101",
    236 => b"01010000", 237 => b"00000000", 238 => b"00000000", 239 => b"01011101",
    240 => b"00000000", 241 => b"01001111", 242 => b"01001110", 243 => b"01001101",
    244 => b"00000000", 245 => b"01011101", 246 => b"00000000", 247 => b"01001111",
    248 => b"00111101", 249 => b"01010000", 250 => b"00000000", 251 => b"00000000",
    252 => b"01011101", 253 => b"00000000", 254 => b"01001111", 255 => b"01010111",

    256  => b"01010101", 257  => b"00001011", 258  => b"00010110", 259  => b"00010010",
    260  => b"00101100", 261  => b"00000000", 262  => b"00100100", 263  => b"00110110",
    264  => b"01011000", 265  => b"00000000", 266  => b"00000000", 267  => b"00000000",
    268  => b"01001000", 269  => b"10000000", 270  => b"01101100", 271  => b"00000000",
    272  => b"01011111", 273  => b"01110111", 274  => b"00000000", 275  => b"01001011",
    276  => b"00000000", 277  => b"00000000", 278  => b"00000000", 279  => b"00011000",
    280  => b"10000111", 281  => b"01110010", 282  => b"00000001", 283  => b"01110110",
    284  => b"01000011", 285  => b"00000000", 286  => b"00000000", 287  => b"00001010",
    288  => b"01100001", 289  => b"00000000", 290  => b"00110011", 291  => b"01001110",
    292  => b"00000000", 293  => b"01011001", 294  => b"10001111", 295  => b"00000000",
    296  => b"00000000", 297  => b"01011110", 298  => b"00000000", 299  => b"00000000",
    300  => b"00000000", 301  => b"01011011", 302  => b"00110000", 303  => b"00000000",
    304  => b"00001111", 305  => b"01111100", 306  => b"01001101", 307  => b"01111011",
    308  => b"00000010", 309  => b"00000000", 310  => b"01001001", 311  => b"00000000",
    312  => b"10000110", 313  => b"00000000", 314  => b"00000000", 315  => b"10011011",
    316  => b"00000000", 317  => b"00000000", 318  => b"00010100", 319  => b"00000000",
    320  => b"01111101", 321  => b"00000000", 322  => b"00000000", 323  => b"00100000",
    324  => b"01100110", 325  => b"00000000", 326  => b"10011100", 327  => b"00000000",
    328  => b"00000000", 329  => b"01010110", 330  => b"10010111", 331  => b"01110100",
    332  => b"00011111", 333  => b"00000000", 334  => b"00000000", 335  => b"00000000",
    336  => b"00000000", 337  => b"10010101", 338  => b"00000000", 339  => b"00000000",
    340  => b"00010001", 341  => b"00000000", 342  => b"00000000", 343  => b"00000000",
    344  => b"00000000", 345  => b"10100011", 346  => b"00000000", 347  => b"01100000",
    348  => b"00000000", 349  => b"00000000", 350  => b"00011110", 351  => b"00000000",
    352  => b"01101001", 353  => b"10010100", 354  => b"10011010", 355  => b"00000000",
    356  => b"01101111", 357  => b"01110011", 358  => b"00000100", 359  => b"10001110",
    360  => b"00000000", 361  => b"00000000", 362  => b"10010010", 363  => b"00000000",
    364  => b"00000000", 365  => b"00010011", 366  => b"00001101", 367  => b"10000001",
    368  => b"00000000", 369  => b"00000000", 370  => b"00000000", 371  => b"00000000",
    372  => b"00110111", 373  => b"00000111", 374  => b"00000000", 375  => b"00000000",
    376  => b"00000000", 377  => b"10011000", 378  => b"00101000", 379  => b"00000000",
    380  => b"00000000", 381  => b"10101011", 382  => b"10000101", 383  => b"00001001",
    384  => b"00000000", 385  => b"00011011", 386  => b"00000000", 387  => b"00000000",
    388  => b"01000000", 389  => b"00000000", 390  => b"10111011", 391  => b"10100101",
    392  => b"00000000", 393  => b"00001100", 394  => b"00111001", 395  => b"00111011",
    396  => b"00000000", 397  => b"00000101", 398  => b"00000000", 399  => b"00100111",
    400  => b"10101100", 401  => b"00000000", 402  => b"00101111", 403  => b"00000000",
    404  => b"10101101", 405  => b"00000000", 406  => b"00111110", 407  => b"10111101",
    408  => b"00000000", 409  => b"00000000", 410  => b"11001101", 411  => b"00000000",
    412  => b"00000000", 413  => b"00000000", 414  => b"00010000", 415  => b"00000000",
    416  => b"00000000", 417  => b"00101011", 418  => b"00111010", 419  => b"00000000",
    420  => b"00000000", 421  => b"00000000", 422  => b"00100010", 423  => b"00000000",
    424  => b"00000000", 425  => b"00000000", 426  => b"00000000", 427  => b"00000000",
    428  => b"01001010", 429  => b"00000000", 430  => b"10111001", 431  => b"01000111",
    432  => b"00000000", 433  => b"00000000", 434  => b"00101110", 435  => b"11000000",
    436  => b"00000000", 437  => b"00000000", 438  => b"00111000", 439  => b"00000000",
    440  => b"01001100", 441  => b"00000000", 442  => b"11010101", 443  => b"00111100",
    444  => b"00110100", 445  => b"00000000", 446  => b"11010010", 447  => b"00000110",
    448  => b"00101001", 449  => b"01000101", 450  => b"00110101", 451  => b"00000000",
    452  => b"00000000", 453  => b"11011110", 454  => b"00000000", 455  => b"11100110",
    456  => b"00001000", 457  => b"00000000", 458  => b"00011101", 459  => b"00000000",
    460  => b"00000000", 461  => b"00000000", 462  => b"00000000", 463  => b"00100101",
    464  => b"11011100", 465  => b"00000000", 466  => b"00010111", 467  => b"00000000",
    468  => b"00011100", 469  => b"00100110", 470  => b"11101010", 471  => b"00011010",
    472  => b"00000011", 473  => b"01000001", 474  => b"00000000", 475  => b"00000000",
    476  => b"00000000", 477  => b"00000000", 478  => b"00000000", 479  => b"00000000",
    480  => b"00000000", 481  => b"01101110", 482  => b"01100010", 483  => b"00001110",
    484  => b"01110101", 485  => b"00000000", 486  => b"01010001", 487  => b"00000000",
    488  => b"00000000", 489  => b"00000000", 490  => b"00110001", 491  => b"00111101",
    492  => b"01010000", 493  => b"00000000", 494  => b"00000000", 495  => b"01011101",
    496  => b"00000000", 497  => b"01001111", 498  => b"01001110", 499  => b"01001101",
    500  => b"00000000", 501  => b"01011101", 502  => b"00000000", 503  => b"01001111",
    504  => b"00111101", 505  => b"01010000", 506  => b"00000000", 507  => b"00000000",
    508  => b"01011101", 509  => b"00000000", 510  => b"01001111", 511  => b"01010111"
);

begin

data_out <= ROM(to_integer(unsigned(num)));

end architecture;


architecture rod2_arch of rod2 is

type ROM_type is array (0 to 511) of std_logic_vector(7 downto 0);

constant ROM : ROM_type := (
    0 => b"10101010", 1 => b"11110101", 2 => b"11101011", 3 => b"11110000",
    4 => b"11010111", 5 => b"00000000", 6 => b"11100001", 7 => b"11010000",
    8 => b"10101111", 9 => b"00000000", 10 => b"00000000", 11 => b"00000000",
    12 => b"11000011", 13 => b"10001100", 14 => b"10100001", 15 => b"00000000",
    16 => b"10110000", 17 => b"10011001", 18 => b"00000000", 19 => b"11000111",
    20 => b"00000000", 21 => b"00000000", 22 => b"00000000", 23 => b"00000000",
    24 => b"10010000", 25 => b"10100110", 26 => b"00011001", 27 => b"10100100",
    28 => b"11011000", 29 => b"00000000", 30 => b"00000000", 31 => b"00010101",
    32 => b"10111110", 33 => b"00000000", 34 => b"11101110", 35 => b"11010100",
    36 => b"00000000", 37 => b"11001011", 38 => b"10010110", 39 => b"00000000",
    40 => b"00000000", 41 => b"11001010", 42 => b"00000000", 43 => b"00000000",
    44 => b"00000000", 45 => b"11010001", 46 => b"11111101", 47 => b"00000000",
    48 => b"00100001", 49 => b"10110100", 50 => b"11100100", 51 => b"10110111",
    52 => b"00110010", 53 => b"00000000", 54 => b"11101100", 55 => b"00000000",
    56 => b"10110001", 57 => b"00000000", 58 => b"00000000", 59 => b"10011111",
    60 => b"00000000", 61 => b"00000000", 62 => b"00101010", 63 => b"00000000",
    64 => b"11000010", 65 => b"00000000", 66 => b"00000000", 67 => b"00100011",
    68 => b"11011101", 69 => b"00000000", 70 => b"10101001", 71 => b"00000000",
    72 => b"00000000", 73 => b"11110010", 74 => b"10110010", 75 => b"11010110",
    76 => b"00101101", 77 => b"00000000", 78 => b"00000000", 79 => b"00000000",
    80 => b"00000000", 81 => b"10111100", 82 => b"00000000", 83 => b"00000000",
    84 => b"01000100", 85 => b"00000000", 86 => b"00000000", 87 => b"00000000",
    88 => b"00000000", 89 => b"10110110", 90 => b"00000000", 91 => b"11111011",
    92 => b"00000000", 93 => b"00000000", 94 => b"01000010", 95 => b"00000000",
    96 => b"11101000", 97 => b"11000110", 98 => b"11001001", 99 => b"00000000",
    100 => b"11110110", 101 => b"11110011", 102 => b"01100100", 103 => b"11011010",
    104 => b"00000000", 105 => b"00000000", 106 => b"11011001", 107 => b"00000000",
    108 => b"00000000", 109 => b"01011100", 110 => b"01100011", 111 => b"11101111",
    112 => b"00000000", 113 => b"00000000", 114 => b"00000000", 115 => b"00000000",
    116 => b"00111111", 117 => b"01110000", 118 => b"00000000", 119 => b"00000000",
    120 => b"00000000", 121 => b"11100010", 122 => b"01010100", 123 => b"00000000",
    124 => b"00000000", 125 => b"11010011", 126 => b"11111010", 127 => b"01111000",
    128 => b"00000000", 129 => b"01101000", 130 => b"00000000", 131 => b"00000000",
    132 => b"01000110", 133 => b"00000000", 134 => b"11001100", 135 => b"11100011",
    136 => b"00000000", 137 => b"01111111", 138 => b"01010011", 139 => b"01010010",
    140 => b"00000000", 141 => b"10001010", 142 => b"00000000", 143 => b"01101001",
    144 => b"11100101", 145 => b"00000000", 146 => b"01100101", 147 => b"11101000",
    148 => b"00000000", 149 => b"01011010", 150 => b"11011011", 151 => b"00000000",
    152 => b"00000000", 153 => b"11001111", 154 => b"00000000", 155 => b"00000000",
    156 => b"00000000", 157 => b"10010001", 158 => b"00000000", 159 => b"01111001",
    160 => b"01101010", 161 => b"00000000", 162 => b"00000000", 163 => b"00000000",
    164 => b"10001000", 165 => b"00000000", 166 => b"00000000", 167 => b"00000000",
    168 => b"00000000", 169 => b"00000000", 170 => b"00000000", 171 => b"00000000",
    172 => b"01100111", 173 => b"00000000", 174 => b"11111001", 175 => b"01000111",
    176 => b"00000000", 177 => b"00000000", 178 => b"11100110", 179 => b"11110000",
    180 => b"00000000", 181 => b"00000000", 182 => b"11101010", 183 => b"00000000",
    184 => b"01100100", 185 => b"00000000", 186 => b"11101111", 187 => b"00111100",
    188 => b"00110100", 189 => b"00000000", 190 => b"11110100", 191 => b"01110010",
    192 => b"11100011", 193 => b"10100010", 194 => b"00110101", 195 => b"00000000",
    196 => b"00000000", 197 => b"11101110", 198 => b"00000000", 199 => b"11111100",
    200 => b"00001000", 201 => b"00000000", 202 => b"00011101", 203 => b"11100001",
    204 => b"11100000", 205 => b"00000000", 206 => b"10101111", 207 => b"10101111",
    208 => b"10101111", 209 => b"11110101", 210 => b"00000000", 211 => b"11010111",
    212 => b"00000000", 213 => b"00000000", 214 => b"00000000", 215 => b"00000000",
    216 => b"11100110", 217 => b"10100111", 218 => b"00000000", 219 => b"00000000",
    220 => b"11101110", 221 => b"00000000", 222 => b"10101111", 223 => b"10101111",
    224 => b"00000000", 225 => b"11000111", 226 => b"00000000", 227 => b"11001111",
    228 => b"11111111", 229 => b"11100011", 230 => b"00000000", 231 => b"11101001",
    232 => b"00000000", 233 => b"11110101", 234 => b"11000110", 235 => b"11000110",
    236 => b"00000000", 237 => b"10110110", 238 => b"00000000", 239 => b"10101111",
    240 => b"11000111", 241 => b"00000000", 242 => b"00000000", 243 => b"11001000",
    244 => b"00000000", 245 => b"00000000", 246 => b"00000000", 247 => b"11011000",
    248 => b"00000000", 249 => b"00000000", 250 => b"11110010", 251 => b"11110010",
    252 => b"00000000", 253 => b"11000010", 254 => b"00000000", 255 => b"00000000",
    256  => b"10101010", 257  => b"11110101", 258  => b"11101011", 259  => b"11110000",
    260  => b"11010111", 261  => b"00000000", 262  => b"11100001", 263  => b"11010000",
    264  => b"10101111", 265  => b"00000000", 266  => b"00000000", 267  => b"00000000",
    268  => b"11000011", 269  => b"10001100", 270  => b"10100001", 271  => b"00000000",
    272  => b"10110000", 273  => b"10011001", 274  => b"00000000", 275  => b"11000111",
    276  => b"00000000", 277  => b"00000000", 278  => b"00000000", 279  => b"00000000",
    280  => b"10010000", 281  => b"10100110", 282  => b"00011001", 283  => b"10100100",
    284  => b"11011000", 285  => b"00000000", 286  => b"00000000", 287  => b"00010101",
    288  => b"10111110", 289  => b"00000000", 290  => b"11101110", 291  => b"11010100",
    292  => b"00000000", 293  => b"11001011", 294  => b"10010110", 295  => b"00000000",
    296  => b"00000000", 297  => b"11001010", 298  => b"00000000", 299  => b"00000000",
    300  => b"00000000", 301  => b"11010001", 302  => b"11111101", 303  => b"00000000",
    304  => b"00100001", 305  => b"10110100", 306  => b"11100100", 307  => b"10110111",
    308  => b"00110010", 309  => b"00000000", 310  => b"11101100", 311  => b"00000000",
    312  => b"10110001", 313  => b"00000000", 314  => b"00000000", 315  => b"10011111",
    316  => b"00000000", 317  => b"00000000", 318  => b"00101010", 319  => b"00000000",
    320  => b"11000010", 321  => b"00000000", 322  => b"00000000", 323  => b"00100011",
    324  => b"11011101", 325  => b"00000000", 326  => b"10101001", 327  => b"00000000",
    328  => b"00000000", 329  => b"11110010", 330  => b"10110010", 331  => b"11010110",
    332  => b"00101101", 333  => b"00000000", 334  => b"00000000", 335  => b"00000000",
    336  => b"00000000", 337  => b"10111100", 338  => b"00000000", 339  => b"00000000",
    340  => b"01000100", 341  => b"00000000", 342  => b"00000000", 343  => b"00000000",
    344  => b"00000000", 345  => b"10110110", 346  => b"00000000", 347  => b"11111011",
    348  => b"00000000", 349  => b"00000000", 350  => b"01000010", 351  => b"00000000",
    352  => b"11101000", 353  => b"11000110", 354  => b"11001001", 355  => b"00000000",
    356  => b"11110110", 357  => b"11110011", 358  => b"01100100", 359  => b"11011010",
    360  => b"00000000", 361  => b"00000000", 362  => b"11011001", 363  => b"00000000",
    364  => b"00000000", 365  => b"01011100", 366  => b"01100011", 367  => b"11101111",
    368  => b"00000000", 369  => b"00000000", 370  => b"00000000", 371  => b"00000000",
    372  => b"00111111", 373  => b"01110000", 374  => b"00000000", 375  => b"00000000",
    376  => b"00000000", 377  => b"11100010", 378  => b"01010100", 379  => b"00000000",
    380  => b"00000000", 381  => b"11010011", 382  => b"11111010", 383  => b"01111000",
    384  => b"00000000", 385  => b"01101000", 386  => b"00000000", 387  => b"00000000",
    388  => b"01000110", 389  => b"00000000", 390  => b"11001100", 391  => b"11100011",
    392  => b"00000000", 393  => b"01111111", 394  => b"01010011", 395  => b"01010010",
    396  => b"00000000", 397  => b"10001010", 398  => b"00000000", 399  => b"01101001",
    400  => b"11100101", 401  => b"00000000", 402  => b"01100101", 403  => b"11101000",
    404  => b"00000000", 405  => b"01011010", 406  => b"11011011", 407  => b"00000000",
    408  => b"00000000", 409  => b"11001111", 410  => b"00000000", 411  => b"00000000",
    412  => b"00000000", 413  => b"10010001", 414  => b"00000000", 415  => b"01111001",
    416  => b"01101010", 417  => b"00000000", 418  => b"00000000", 419  => b"00000000",
    420  => b"10001000", 421  => b"00000000", 422  => b"00000000", 423  => b"00000000",
    424  => b"00000000", 425  => b"00000000", 426  => b"00000000", 427  => b"00000000",
    428  => b"01100111", 429  => b"00000000", 430  => b"11111001", 431  => b"01000111",
    432  => b"00000000", 433  => b"00000000", 434  => b"11100110", 435  => b"11110000",
    436  => b"00000000", 437  => b"00000000", 438  => b"11101010", 439  => b"00000000",
    440  => b"01100100", 441  => b"00000000", 442  => b"11101111", 443  => b"00111100",
    444  => b"00110100", 445  => b"00000000", 446  => b"11110100", 447  => b"01110010",
    448  => b"11100011", 449  => b"10100010", 450  => b"00110101", 451  => b"00000000",
    452  => b"00000000", 453  => b"11101110", 454  => b"00000000", 455  => b"11111100",
    456  => b"00001000", 457  => b"00000000", 458  => b"00011101", 459  => b"11100001",
    460  => b"11100000", 461  => b"00000000", 462  => b"10101111", 463  => b"10101111",
    464  => b"10101111", 465  => b"11110101", 466  => b"00000000", 467  => b"11010111",
    468  => b"00000000", 469  => b"00000000", 470  => b"00000000", 471  => b"00000000",
    472  => b"11100110", 473  => b"10100111", 474  => b"00000000", 475  => b"00000000",
    476  => b"11101110", 477  => b"00000000", 478  => b"10101111", 479  => b"10101111",
    480  => b"00000000", 481  => b"11000111", 482  => b"00000000", 483  => b"11001111",
    484  => b"11111111", 485  => b"11100011", 486  => b"00000000", 487  => b"11101001",
    488  => b"00000000", 489  => b"11110101", 490  => b"11000110", 491  => b"11000110",
    492  => b"00000000", 493  => b"10110110", 494  => b"00000000", 495  => b"10101111",
    496  => b"11000111", 497  => b"00000000", 498  => b"00000000", 499  => b"11001000",
    500  => b"00000000", 501  => b"00000000", 502  => b"00000000", 503  => b"11011000",
    504  => b"00000000", 505  => b"00000000", 506  => b"11110010", 507  => b"11110010",
    508  => b"00000000", 509  => b"11000010", 510  => b"00000000", 511  => b"00000000"
);

begin

data_out <= ROM(to_integer(unsigned(num)));

end architecture;



architecture tjekrod_arch of tjekrod is

type ROM_type is array (0 to 511) of std_logic;

constant ROM : ROM_type := (
    0 => '1', 1 => '1', 2 => '1', 3 => '1', 4 => '1', 5 => '0', 6 => '1', 7 => '1', 8 => '1', 9 => '0', 10 => '0',
    11 => '0', 12 => '1', 13 => '1', 14 => '1', 15 => '0', 16 => '1', 17 => '1', 18 => '0', 19 => '1', 20 => '0',
    21 => '0', 22 => '0', 23 => '1', 24 => '1', 25 => '1', 26 => '1', 27 => '1', 28 => '1', 29 => '0', 30 => '0', 
    31 => '1', 32 => '1', 33 => '0', 34 => '1', 35 => '1', 36 => '0', 37 => '1', 38 => '1', 39 => '0', 40 => '0', 
    41 => '1', 42 => '0', 43 => '0', 44 => '0', 45 => '1', 46 => '1', 47 => '0', 48 => '1', 49 => '1', 50 => '1', 
    51 => '1', 52 => '1', 53 => '0', 54 => '1', 55 => '0', 56 => '1', 57 => '0', 58 => '0', 59 => '1', 60 => '0', 
    61 => '0', 62 => '1', 63 => '0', 64 => '1', 65 => '0', 66 => '0', 67 => '1', 68 => '1', 69 => '0', 70 => '1',
    71 => '0', 72 => '0', 73 => '1', 74 => '1', 75 => '1', 76 => '1', 77 => '0', 78 => '0', 79 => '0', 80 => '0', 
    81 => '0', 82 => '1', 83 => '0', 84 => '0', 85 => '1', 86 => '0', 87 => '0',
    88 => '0', 89 => '0', 90 => '1', 91 => '0', 92 => '1', 93 => '0', 94 => '0', 95 => '0',
    96 => '1', 97 => '0', 98 => '1', 99 => '1', 100 => '1', 101 => '0', 102 => '1', 103 => '1',
    104 => '1', 105 => '1', 106 => '0', 107 => '0', 108 => '1', 109 => '0', 110 => '0', 111 => '1',
    112 => '1', 113 => '1', 114 => '0', 115 => '0', 116 => '0', 117 => '0', 118 => '1', 119 => '1',
    120 => '0', 121 => '0', 122 => '0', 123 => '1', 124 => '1', 125 => '0', 126 => '0', 127 => '1',
    128 => '1', 129 => '1', 130 => '0', 131 => '1', 132 => '0', 133 => '0', 134 => '1', 135 => '0',
    136 => '1', 137 => '1', 138 => '0', 139 => '1', 140 => '1', 141 => '1', 142 => '0', 143 => '1',
    144 => '0', 145 => '1', 146 => '1', 147 => '0', 148 => '1', 149 => '0', 150 => '1', 151 => '0',
    152 => '1', 153 => '1', 154 => '0', 155 => '0', 156 => '0', 157 => '1', 158 => '0', 159 => '0',
    160 => '0', 161 => '1', 162 => '0', 163 => '0', 164 => '1', 165 => '1', 166 => '0', 167 => '0',
    168 => '0', 169 => '0', 170 => '0', 171 => '1', 172 => '0', 173 => '1', 174 => '1', 175 => '0',
    176 => '0', 177 => '1', 178 => '1', 179 => '1', 180 => '1', 181 => '0', 182 => '1', 183 => '1',
    184 => '0', 185 => '0', 186 => '0', 187 => '0', 188 => '0', 189 => '0', 190 => '1', 191 => '0',
    192 => '1', 193 => '1', 194 => '1', 195 => '1', 196 => '0', 197 => '1', 198 => '0', 199 => '0',
    200 => '0', 201 => '0', 202 => '1', 203 => '1', 204 => '1', 205 => '1', 206 => '0', 207 => '1',
    208 => '1', 209 => '0', 210 => '0', 211 => '0', 212 => '0', 213 => '0', 214 => '0', 215 => '1',
    216 => '1', 217 => '0', 218 => '1', 219 => '0', 220 => '1', 221 => '1', 222 => '1', 223 => '1',
    224 => '0', 225 => '1', 226 => '1', 227 => '0', 228 => '0', 229 => '0', 230 => '0', 231 => '0',
    232 => '0', 233 => '0', 234 => '1', 235 => '1', 236 => '0', 237 => '1', 238 => '0', 239 => '1',
    240 => '1', 241 => '1', 242 => '1', 243 => '0', 244 => '1', 245 => '1', 246 => '0', 247 => '0',
    248 => '0', 249 => '0', 250 => '0', 251 => '0', 252 => '0', 253 => '0', 254 => '1', 255 => '1',
    256 => '1', 257 => '1', 258 => '1', 259 => '1', 260 => '0', 261 => '1', 262 => '1', 263 => '1', 264 => '0', 265 => '0',
    266 => '0', 267 => '1', 268 => '1', 269 => '1', 270 => '0', 271 => '1', 272 => '1', 273 => '0', 274 => '1', 275 => '0',
    276 => '0', 277 => '0', 278 => '1', 279 => '1', 280 => '1', 281 => '1', 282 => '1', 283 => '0', 284 => '0', 285 => '1',
    286 => '1', 287 => '0', 288 => '1', 289 => '1', 290 => '0', 291 => '0', 292 => '1', 293 => '0', 294 => '0', 295 => '0',
    296 => '1', 297 => '1', 298 => '0', 299 => '1', 300 => '1', 301 => '1', 302 => '1', 303 => '1', 304 => '0', 305 => '1',
    306 => '0', 307 => '1', 308 => '0', 309 => '0', 310 => '1', 311 => '0', 312 => '0', 313 => '1', 314 => '0', 315 => '1',
    316 => '0', 317 => '0', 318 => '1', 319 => '1', 320 => '0', 321 => '1', 322 => '0', 323 => '0', 324 => '1', 325 => '1',
    326 => '0', 327 => '1', 328 => '0', 329 => '0', 330 => '1', 331 => '1', 332 => '1', 333 => '1', 334 => '0', 335 => '0',
    336 => '0', 337 => '0', 338 => '0', 339 => '1', 340 => '0', 341 => '0', 342 => '1', 343 => '0', 344 => '0', 345 => '0',
    346 => '0', 347 => '1', 348 => '0', 349 => '1', 350 => '0', 351 => '0', 352 => '0', 353 => '1', 354 => '0', 355 => '1',
    356 => '1', 357 => '0', 358 => '1', 359 => '1', 360 => '1', 361 => '1', 362 => '0', 363 => '0', 364 => '1', 365 => '0',
    366 => '0', 367 => '1', 368 => '1', 369 => '1', 370 => '0', 371 => '0', 372 => '0', 373 => '0', 374 => '1', 375 => '1',
    376 => '0', 377 => '0', 378 => '0', 379 => '1', 380 => '1', 381 => '0', 382 => '0', 383 => '1', 384 => '1', 385 => '1',
    386 => '0', 387 => '1', 388 => '0', 389 => '0', 390 => '1', 391 => '0', 392 => '1', 393 => '1', 394 => '0', 395 => '1',
    396 => '1', 397 => '1', 398 => '0', 399 => '1', 400 => '0', 401 => '1', 402 => '1', 403 => '0', 404 => '1', 405 => '0',
    406 => '1', 407 => '1', 408 => '0', 409 => '1', 410 => '0', 411 => '1', 412 => '0', 413 => '1', 414 => '1', 415 => '0',
    416 => '1', 417 => '0', 418 => '0', 419 => '1', 420 => '0', 421 => '0', 422 => '0', 423 => '1', 424 => '0', 425 => '0',
    426 => '0', 427 => '1', 428 => '0', 429 => '0', 430 => '0', 431 => '0', 432 => '0', 433 => '1', 434 => '0', 435 => '1',
    436 => '1', 437 => '0', 438 => '0', 439 => '1', 440 => '1', 441 => '1', 442 => '1', 443 => '0', 444 => '1', 445 => '1',
    446 => '0', 447 => '0', 448 => '0', 449 => '0', 450 => '0', 451 => '0', 452 => '1', 453 => '0', 454 => '1', 455 => '0',
    456 => '0', 457 => '0', 458 => '1', 459 => '1', 460 => '1', 461 => '1', 462 => '0', 463 => '1', 464 => '1', 465 => '0',
    466 => '0', 467 => '0', 468 => '0', 469 => '0', 470 => '0', 471 => '1', 472 => '1', 473 => '0', 474 => '1', 475 => '0',
    476 => '1', 477 => '1', 478 => '1', 479 => '1', 480 => '0', 481 => '1', 482 => '1', 483 => '0', 484 => '0', 485 => '0',
    486 => '0', 487 => '0', 488 => '0', 489 => '0', 490 => '1', 491 => '1', 492 => '0', 493 => '1', 494 => '0', 495 => '1',
    496 => '1', 497 => '1', 498 => '1', 499 => '0', 500 => '1', 501 => '1', 502 => '0', 503 => '0', 504 => '0', 505 => '0',
    506 => '0', 507 => '0', 508 => '0', 509 => '0', 510 => '1', 511 => '1'
  
  );

begin

	data_out <= ROM(to_integer(unsigned(num)));

end architecture;
