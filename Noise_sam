

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity noise is
    Port (
		en_in : in std_logic;
      CLK     	   : in  std_logic;
      dat_in 		: in std_logic_vector(254 downto 0);
		dat_out 		: out std_logic_vector(254 downto 0);
		en_out : out std_logic
       
    );
end noise;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity noiserom is
port  ( num : in std_logic_vector(3 downto 0);
		data_out : out std_logic_vector(254 downto 0));
end entity;


architecture noise_arch of noise is

signal num_count : std_logic_vector (3 downto 0) := "0000";
signal noise_temp : std_logic_vector (254 downto 0);

component noiserom 
port  ( num : in std_logic_vector(3 downto 0);
		data_out : out std_logic_vector(254 downto 0));
end component;

begin 
	
	noise1 : noiserom port map(num => num_count, data_out => noise_temp);


	process(CLK)
		 
		 begin
		 
		 if(rising_edge(CLK)) then
		 en_out <= en_in;
		 
		 if en_in = '1' then
		 
			if (num_count < 9) then
			
				num_count <= num_count+1;
			
			elsif num_count = 9 then
			
			 num_count <= "0000";
			
			end if; 
			
			dat_out <= dat_in xor noise_temp;
			
			
			
			end if;
		 
		 end if;
		 
	end process;
	
end architecture;





architecture noiserom_arch of noiserom is
    type ROM_type is array (0 to 9) of std_logic_vector(254 downto 0);

    constant ROM : ROM_type := (
         0 =>  "000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			1 =>  "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		   2 =>  "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",	       
         3 =>  "000000000100010000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
         4 =>  "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			5 =>  "000001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			6 =>  "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			7 =>  "000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			8 =>  "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
         9 =>  "000000000000000000000000000000010001000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

	);
begin
    data_out <= ROM(to_integer(unsigned(num)));
end architecture;
